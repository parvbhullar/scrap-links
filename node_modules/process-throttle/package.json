{
  "_args": [
    [
      "process-throttle@0.0.1",
      "/Drives/Ninjacart/Projects/node/scrapper"
    ]
  ],
  "_from": "process-throttle@0.0.1",
  "_id": "process-throttle@0.0.1",
  "_inCache": true,
  "_location": "/process-throttle",
  "_npmUser": {
    "email": "rohini.raghav@gmail.com",
    "name": "rohiniwork"
  },
  "_npmVersion": "1.3.8",
  "_phantomChildren": {},
  "_requested": {
    "name": "process-throttle",
    "raw": "process-throttle@0.0.1",
    "rawSpec": "0.0.1",
    "scope": null,
    "spec": "0.0.1",
    "type": "version"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/process-throttle/-/process-throttle-0.0.1.tgz",
  "_shasum": "7944820f1a6969005ae8689fe3339027dfd31fb3",
  "_shrinkwrap": null,
  "_spec": "process-throttle@0.0.1",
  "_where": "/Drives/Ninjacart/Projects/node/scrapper",
  "author": {
    "email": "rohini.raghav@gmail.com",
    "name": "Rohini Harendra"
  },
  "bugs": {
    "url": "http://github.com/yahoo/process-throttle/issues"
  },
  "dependencies": {},
  "description": "monitors total requests served and memory used and kills itself if reached limits",
  "devDependencies": {
    "istanbul": "~0.1.8",
    "jshint": "~0.9.0",
    "mockery": "*",
    "vows": "*",
    "yui-lint": "~0.1.1"
  },
  "directories": {},
  "dist": {
    "shasum": "7944820f1a6969005ae8689fe3339027dfd31fb3",
    "tarball": "https://registry.npmjs.org/process-throttle/-/process-throttle-0.0.1.tgz"
  },
  "engines": {
    "node": ">=0.6"
  },
  "keywords": [
    "throttle",
    "yahoo"
  ],
  "licenses": [
    {
      "type": "BSD",
      "url": "https://github.com/yahoo/process-throttle/blob/master/LICENSE"
    }
  ],
  "main": "./lib/throttle.js",
  "maintainers": [
    {
      "name": "rohiniwork",
      "email": "rohini.raghav@gmail.com"
    }
  ],
  "name": "process-throttle",
  "optionalDependencies": {},
  "readme": "# throttle\n\nNodejs module that monitors the total number of requests served by the process and the memory vsize consumed.\nWhen asked to limit one or both of these (through configuration), this module will kill the process.\n\nThis module is best used in cluster mode where the master process would take care of bringing back the worker process,\nup and running again.\n\nThis package is tested only with Node versions 8 and 10.\n\n# install\n\nWith [npm](http://npmjs.org) do:\n\n```\nnpm install process-throttle\n```\n\n# usage\n```js\nvar http = require('http'),\n    throttle = require('throttle');\n\n//Set limits\nvar myThrottler = new throttler({\n    'max_requests':2 \n});\n\nprocess.on('exit', function () {\n    console.log('Server received exit command, shutting down\\n');\n});\n\nvar server = http.createServer(function(req, res) {\n   res.writeHead(200);\n   res.end(\"I have served \" + process.throttle.getTotalRequestCount() + \" requests so far. My limit is \" + max_requests + \"\\n\");\n}).listen(8000);\n// Add servers that need to monitor, to the throttler\nmyThrottler.addServer(server);\n\n\n```\n\n# Output\n\n```\n% node throttle-usage.js  &\n% curl 'http://localhost.om:8000'\n>> I have served 1 requests so far. My limit is 2\n% curl 'http://localhost.om:8000'\n>> I have served 2 requests so far. My limit is 2\n>> Server received exit command, shutting down\n```\n\n# Build Status\n\n[![Build Status](https://secure.travis-ci.org/yahoo/process-throttle.png?branch=master)](http://travis-ci.org/yahoo/process-throttle)\n\n# Node Badge\n\n[![NPM](https://nodei.co/npm/process-throttle.png)](https://nodei.co/npm/process-throttle/)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "https://github.com/yahoo/process-throttle.git"
  },
  "scripts": {
    "pretest": "jshint --config ./node_modules/yui-lint/jshint.json ./lib/",
    "test": "istanbul cover --print both vows -- --spec ./tests/*.js"
  },
  "version": "0.0.1"
}
